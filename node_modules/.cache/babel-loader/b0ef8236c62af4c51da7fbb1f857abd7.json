{"ast":null,"code":"var _jsxFileName = \"D:\\\\self\\\\__Web Development Practice\\\\ReactPractice\\\\practice2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nsetInterval(() => {\n  let date = new Date();\n  let hour = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\n  let minute = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n  let second = date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n  let time = hour + \":\" + minute + \":\" + second;\n  let day = date.toDateString();\n  currentTime;\n}, 1000);\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Digital Clock\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"Current time is: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"time\",\n      children: currentTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 1\n  }, this)]\n}, void 0, true), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/self/__Web Development Practice/ReactPractice/practice2/src/index.js"],"names":["React","ReactDOM","setInterval","date","Date","hour","getHours","minute","getMinutes","second","getSeconds","time","day","toDateString","currentTime","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AASAC,WAAW,CAAC,MAAM;AAChB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,IAAI,GAAGF,IAAI,CAACG,QAAL,KAAkB,EAAlB,GAAuBH,IAAI,CAACG,QAAL,KAAkB,EAAzC,GAA8CH,IAAI,CAACG,QAAL,EAAzD;AACA,MAAIC,MAAM,GAAGJ,IAAI,CAACK,UAAL,KAAoB,EAApB,GAAyB,MAAML,IAAI,CAACK,UAAL,EAA/B,GAAmDL,IAAI,CAACK,UAAL,EAAhE;AACA,MAAIC,MAAM,GAAGN,IAAI,CAACO,UAAL,KAAoB,EAApB,GAAyB,MAAMP,IAAI,CAACO,UAAL,EAA/B,GAAmDP,IAAI,CAACO,UAAL,EAAhE;AACA,MAAIC,IAAI,GAAGN,IAAI,GAAG,GAAP,GAAaE,MAAb,GAAsB,GAAtB,GAA4BE,MAAvC;AACA,MAAIG,GAAG,GAAGT,IAAI,CAACU,YAAL,EAAV;AACAC,EAAAA,WAAW;AACZ,CARU,EAQR,IARQ,CAAX;AAUAb,QAAQ,CAACc,MAAT,eACA;AAAA,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAA,iDAAqB;AAAM,MAAA,EAAE,EAAG,MAAX;AAAA,gBAAmBD;AAAnB;AAAA;AAAA;AAAA;AAAA,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAAA,gBADA,EAMCE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\n\n\n\n\n\nsetInterval(() => {\n  let date = new Date();\n  let hour = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\n  let minute = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n  let second = date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n  let time = hour + \":\" + minute + \":\" + second;\n  let day = date.toDateString();\n  currentTime;\n}, 1000);\n\nReactDOM.render(\n<>\n<h1>Digital Clock</h1>\n<h2>Current time is: <span id = 'time'>{currentTime}</span></h2>\n\n</>\n,document.getElementById(\"root\"));\n\n\n"]},"metadata":{},"sourceType":"module"}